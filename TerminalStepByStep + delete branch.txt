{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red47\green180\blue29;
\red180\green36\blue25;\red159\green160\blue28;\red46\green174\blue187;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;\cssrgb\c20238\c73898\c14947;
\cssrgb\c76409\c21698\c12524;\cssrgb\c68468\c68012\c14208;\cssrgb\c20196\c73240\c78250;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 Last login: Tue May 30 18:29:36 on ttys000\
DJ-MATIs-MacBook-Pro:~ Mati$ git bash\
git: 'bash' is not a git command. See 'git --help'.\
\
Did you mean this?\
	stash\
DJ-MATIs-MacBook-Pro:~ Mati$ git push\
fatal: Not a git repository (or any of the parent directories): .git\
DJ-MATIs-MacBook-Pro:~ Mati$ cd \
DJ-MATIs-MacBook-Pro:~ Mati$ cd..\
-bash: cd..: command not found\
DJ-MATIs-MacBook-Pro:~ Mati$ cd desktop\
DJ-MATIs-MacBook-Pro:desktop Mati$ cd exercices-repo\
-bash: cd: exercices-repo: No such file or directory\
DJ-MATIs-MacBook-Pro:desktop Mati$ cd exercise-repo\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
fatal: The upstream branch of your current branch does not match\
the name of your current branch.  To push to the upstream branch\
on the remote, use\
\
    git push origin HEAD:NewBranck\
\
To push to the branch of the same name on the remote, use\
\
    git push origin NewBranch\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push origin master\
Username for 'https://github.com': djmati.bg\
Password for 'https://djmati.bg@github.com': \
remote: Invalid username or password.\
fatal: Authentication failed for 'https://github.com/djmati/exercise-repo/'\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git \
usage: git [--version] [--help] [-C <path>] [-c name=value]\
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\
           <command> [<args>]\
\
These are common Git commands used in various situations:\
\
start a working area (see also: git help tutorial)\
   clone      Clone a repository into a new directory\
   init       Create an empty Git repository or reinitialize an existing one\
\
work on the current change (see also: git help everyday)\
   add        Add file contents to the index\
   mv         Move or rename a file, a directory, or a symlink\
   reset      Reset current HEAD to the specified state\
   rm         Remove files from the working tree and from the index\
\
examine the history and state (see also: git help revisions)\
   bisect     Use binary search to find the commit that introduced a bug\
   grep       Print lines matching a pattern\
   log        Show commit logs\
   show       Show various types of objects\
   status     Show the working tree status\
\
grow, mark and tweak your common history\
   branch     List, create, or delete branches\
   checkout   Switch branches or restore working tree files\
   commit     Record changes to the repository\
   diff       Show changes between commits, commit and working tree, etc\
   merge      Join two or more development histories together\
   rebase     Reapply commits on top of another base tip\
   tag        Create, list, delete or verify a tag object signed with GPG\
\
collaborate (see also: git help workflows)\
   fetch      Download objects and refs from another repository\
   pull       Fetch from and integrate with another repository or a local branch\
   push       Update remote refs along with associated objects\
\
'git help -a' and 'git help -g' list available subcommands and some\
concept guides. See 'git help <command>' or 'git help <concept>'\
to read about a specific subcommand or concept.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git help -g\
The common Git guides are:\
\
   attributes   Defining attributes per path\
   everyday     Everyday Git With 20 Commands Or So\
   glossary     A Git glossary\
   ignore       Specifies intentionally untracked files to ignore\
   modules      Defining submodule properties\
   revisions    Specifying revisions and ranges for Git\
   tutorial     A tutorial introduction to Git (for version 1.5.1 or newer)\
   workflows    An overview of recommended workflows with Git\
\
'git help -a' and 'git help -g' list available subcommands and some\
concept guides. See 'git help <command>' or 'git help <concept>'\
to read about a specific subcommand or concept.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git help -a\
usage: git [--version] [--help] [-C <path>] [-c name=value]\
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\
           <command> [<args>]\
\
available git commands in '/usr/local/git/libexec/git-core'\
\
  add                       merge-octopus\
  add--interactive          merge-one-file\
  am                        merge-ours\
  annotate                  merge-recursive\
  apply                     merge-resolve\
  archimport                merge-subtree\
  archive                   merge-tree\
  bisect                    mergetool\
  bisect--helper            mktag\
  blame                     mktree\
  branch                    mv\
  bundle                    name-rev\
  cat-file                  notes\
  check-attr                p4\
  check-ignore              pack-objects\
  check-mailmap             pack-redundant\
  check-ref-format          pack-refs\
  checkout                  patch-id\
  checkout-index            prune\
  cherry                    prune-packed\
  cherry-pick               pull\
  citool                    push\
  clean                     quiltimport\
  clone                     read-tree\
  column                    rebase\
  commit                    rebase--helper\
  commit-tree               receive-pack\
  config                    reflog\
  count-objects             remote\
  credential                remote-ext\
  credential-cache          remote-fd\
  credential-cache--daemon  remote-ftp\
  credential-store          remote-ftps\
  cvsexportcommit           remote-http\
  cvsimport                 remote-https\
  cvsserver                 remote-testsvn\
  daemon                    repack\
  describe                  replace\
  diff                      request-pull\
  diff-files                rerere\
  diff-index                reset\
  diff-tree                 rev-list\
  difftool                  rev-parse\
  difftool--helper          revert\
  fast-export               rm\
  fast-import               send-email\
  fetch                     send-pack\
  fetch-pack                sh-i18n--envsubst\
  filter-branch             shell\
  fmt-merge-msg             shortlog\
  for-each-ref              show\
  format-patch              show-branch\
  fsck                      show-index\
  fsck-objects              show-ref\
  gc                        stage\
  get-tar-commit-id         stash\
  grep                      status\
  gui                       stripspace\
  gui--askpass              submodule\
  hash-object               submodule--helper\
  help                      subtree\
  http-backend              svn\
  http-fetch                symbolic-ref\
  http-push                 tag\
  imap-send                 unpack-file\
  index-pack                unpack-objects\
  init                      update-index\
  init-db                   update-ref\
  instaweb                  update-server-info\
  interpret-trailers        upload-archive\
  log                       upload-pack\
  ls-files                  var\
  ls-remote                 verify-commit\
  ls-tree                   verify-pack\
  mailinfo                  verify-tag\
  mailsplit                 web--browse\
  merge                     whatchanged\
  merge-base                worktree\
  merge-file                write-tree\
  merge-index\
\
git commands available from elsewhere on your $PATH\
\
  credential-osxkeychain\
\
'git help -a' and 'git help -g' list available subcommands and some\
concept guides. See 'git help <command>' or 'git help <concept>'\
to read about a specific subcommand or concept.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ $git config --global\
-bash: config: command not found\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ $git config --global credential.helper osxkeychain\
-bash: config: command not found\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ $git config --global credential.helper osxkeychain\
-bash: config: command not found\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ $git config --global credential.helper;5D osxkeychain\
-bash: config: command not found\
-bash: 5D: command not found\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git config --global credential.helper osxkeychain\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git config --global credential.helper osxkeychain\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ brew install git\
-bash: brew: command not found\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ install git\
usage: install [-bCcpSsv] [-B suffix] [-f flags] [-g group] [-m mode]\
               [-o owner] file1 file2\
       install [-bCcpSsv] [-B suffix] [-f flags] [-g group] [-m mode]\
               [-o owner] file1 ... fileN directory\
       install -d [-v] [-g group] [-m mode] [-o owner] directory ...\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
fatal: The upstream branch of your current branch does not match\
the name of your current branch.  To push to the upstream branch\
on the remote, use\
\
    git push origin HEAD:NewBranck\
\
To push to the branch of the same name on the remote, use\
\
    git push origin NewBranch\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git pull\
Already up-to-date.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git pull\
Already up-to-date.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
fatal: The upstream branch of your current branch does not match\
the name of your current branch.  To push to the upstream branch\
on the remote, use\
\
    git push origin HEAD:NewBranck\
\
To push to the branch of the same name on the remote, use\
\
    git push origin NewBranch\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ \
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push master\
fatal: 'master' does not appear to be a git repository\
fatal: Could not read from remote repository.\
\
Please make sure you have the correct access rights\
and the repository exists.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ \
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
fatal: The upstream branch of your current branch does not match\
the name of your current branch.  To push to the upstream branch\
on the remote, use\
\
    git push origin HEAD:NewBranck\
\
To push to the branch of the same name on the remote, use\
\
    git push origin NewBranch\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push origin master\
Username for 'https://github.com': djmati.bg\
Password for 'https://djmati.bg@github.com': \
remote: Invalid username or password.\
fatal: Authentication failed for 'https://github.com/djmati/exercise-repo/'\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push origin master\
Username for 'https://github.com': djmati\
Password for 'https://djmati@github.com': \
To https://github.com/djmati/exercise-repo\
 ! [rejected]        master -> master (non-fast-forward)\
error: failed to push some refs to 'https://github.com/djmati/exercise-repo'\
hint: Updates were rejected because a pushed branch tip is behind its remote\
hint: counterpart. Check out this branch and integrate the remote changes\
hint: (e.g. 'git pull ...') before pushing again.\
hint: See the 'Note about fast-forwards' in 'git push --help' for details.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch\
* \cf4 NewBranch\cf2 \
  master\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
fatal: The upstream branch of your current branch does not match\
the name of your current branch.  To push to the upstream branch\
on the remote, use\
\
    git push origin HEAD:NewBranck\
\
To push to the branch of the same name on the remote, use\
\
    git push origin NewBranch\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch\
* \cf4 NewBranch\cf2 \
  master\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git commit\
On branch NewBranch\
Your branch is up-to-date with 'origin/NewBranck'.\
Changes not staged for commit:\
	\cf5 deleted:    comma.txt\cf2 \
\
Untracked files:\
	\cf5 comma123.txt\cf2 \
\
no changes added to commit\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git status\
On branch NewBranch\
Your branch is up-to-date with 'origin/NewBranck'.\
Changes not staged for commit:\
  (use "git add/rm <file>..." to update what will be committed)\
  (use "git checkout -- <file>..." to discard changes in working directory)\
\
	\cf5 deleted:    comma.txt\cf2 \
\
Untracked files:\
  (use "git add <file>..." to include in what will be committed)\
\
	\cf5 comma123.txt\cf2 \
\
no changes added to commit (use "git add" and/or "git commit -a")\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git add comma123.txt\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git status\
On branch NewBranch\
Your branch is up-to-date with 'origin/NewBranck'.\
Changes to be committed:\
  (use "git reset HEAD <file>..." to unstage)\
\
	\cf4 new file:   comma123.txt\cf2 \
\
Changes not staged for commit:\
  (use "git add/rm <file>..." to update what will be committed)\
  (use "git checkout -- <file>..." to discard changes in working directory)\
\
	\cf5 deleted:    comma.txt\cf2 \
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git commit -m "added comma123.txt"\
[NewBranch b9afff1] added comma123.txt\
 1 file changed, 15 insertions(+)\
 create mode 100644 comma123.txt\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
fatal: The upstream branch of your current branch does not match\
the name of your current branch.  To push to the upstream branch\
on the remote, use\
\
    git push origin HEAD:NewBranck\
\
To push to the branch of the same name on the remote, use\
\
    git push origin NewBranch\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch -r\\\
> git branch -r\
error: unknown switch `g'\
usage: git branch [<options>] [-r | -a] [--merged | --no-merged]\
   or: git branch [<options>] [-l] [-f] <branch-name> [<start-point>]\
   or: git branch [<options>] [-r] (-d | -D) <branch-name>...\
   or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch>\
   or: git branch [<options>] [-r | -a] [--points-at]\
   or: git branch [<options>] [-r | -a] [--format]\
\
Generic options\
    -v, --verbose         show hash and subject, give twice for upstream branch\
    -q, --quiet           suppress informational messages\
    -t, --track           set up tracking mode (see git-pull(1))\
    --set-upstream        change upstream info\
    -u, --set-upstream-to <upstream>\
                          change the upstream info\
    --unset-upstream      Unset the upstream info\
    --color[=<when>]      use colored output\
    -r, --remotes         act on remote-tracking branches\
    --contains <commit>   print only branches that contain the commit\
    --no-contains <commit>\
                          print only branches that don't contain the commit\
    --abbrev[=<n>]        use <n> digits to display SHA-1s\
\
Specific git-branch actions:\
    -a, --all             list both remote-tracking and local branches\
    -d, --delete          delete fully merged branch\
    -D                    delete branch (even if not merged)\
    -m, --move            move/rename a branch and its reflog\
    -M                    move/rename a branch, even if target exists\
    --list                list branch names\
    -l, --create-reflog   create the branch's reflog\
    --edit-description    edit the description for the branch\
    -f, --force           force creation, move/rename, deletion\
    --merged <commit>     print only branches that are merged\
    --no-merged <commit>  print only branches that are not merged\
    --column[=<style>]    list branches in columns\
    --sort <key>          field name to sort on\
    --points-at <object>  print only branches of the object\
    -i, --ignore-case     sorting and filtering are case insensitive\
    --format <format>     format to use for the output\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch -r\
  \cf5 origin/NewBranck\cf2 \
  \cf5 origin/master\cf2 \
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch -a\
* \cf4 NewBranch\cf2 \
  master\
  \cf5 remotes/origin/NewBranck\cf2 \
  \cf5 remotes/origin/master\cf2 \
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
fatal: The upstream branch of your current branch does not match\
the name of your current branch.  To push to the upstream branch\
on the remote, use\
\
    git push origin HEAD:NewBranck\
\
To push to the branch of the same name on the remote, use\
\
    git push origin NewBranch\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push origin NewBranch\
Counting objects: 2, done.\
Delta compression using up to 4 threads.\
Compressing objects: 100% (2/2), done.\
Writing objects: 100% (2/2), 232 bytes | 0 bytes/s, done.\
Total 2 (delta 1), reused 0 (delta 0)\
remote: Resolving deltas: 100% (1/1), completed with 1 local object.\
To https://github.com/djmati/exercise-repo\
 * [new branch]      NewBranch -> NewBranch\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch\\\
> git branch\
git: 'branchgit' is not a git command. See 'git --help'.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch\
* \cf4 NewBranch\cf2 \
  master\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git checkout master\
Switched to branch 'master'\
Your branch is behind 'origin/master' by 2 commits, and can be fast-forwarded.\
  (use "git pull" to update your local branch)\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git pull\
Updating 2d8a578..cc4fb2a\
Fast-forward\
 comma.txt | 15 \cf4 +++++++++++++++\cf2 \
 1 file changed, 15 insertions(+)\
 create mode 100644 comma.txt\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git status\
On branch master\
Your branch is up-to-date with 'origin/master'.\
nothing to commit, working tree clean\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
Everything up-to-date\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git checkout master\
Already on 'master'\
Your branch is up-to-date with 'origin/master'.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git checkout NewBranch\
Switched to branch 'NewBranch'\
Your branch is based on 'origin/NewBranck', but the upstream is gone.\
  (use "git branch --unset-upstream" to fixup)\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch\
* \cf4 NewBranch\cf2 \
  master\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch --unset-upstream\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch\
* \cf4 NewBranch\cf2 \
  master\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch -r\
  \cf5 origin/NewBranch\cf2 \
  \cf5 origin/master\cf2 \
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push\
fatal: The current branch NewBranch has no upstream branch.\
To push the current branch and set the remote as upstream, use\
\
    git push --set-upstream origin NewBranch\
\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push --set-upstream origin NewBranch\
Branch NewBranch set up to track remote branch NewBranch from origin.\
Everything up-to-date\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch -a\
* \cf4 NewBranch\cf2 \
  master\
  \cf5 remotes/origin/NewBranch\cf2 \
  \cf5 remotes/origin/master\cf2 \
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git checkout master\
Switched to branch 'master'\
Your branch is up-to-date with 'origin/master'.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git checkout NewBranch\
Switched to branch 'NewBranch'\
Your branch is up-to-date with 'origin/NewBranch'.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch master\
fatal: A branch named 'master' already exists.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git checkout master\
Switched to branch 'master'\
Your branch is up-to-date with 'origin/master'.\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git merge NewBranch\
Merge made by the 'recursive' strategy.\
 comma123.txt | 15 \cf4 +++++++++++++++\cf2 \
 1 file changed, 15 insertions(+)\
 create mode 100644 comma123.txt\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push --all\
Counting objects: 1, done.\
Writing objects: 100% (1/1), 221 bytes | 0 bytes/s, done.\
Total 1 (delta 0), reused 0 (delta 0)\
To https://github.com/djmati/exercise-repo\
   cc4fb2a..a91571f  master -> master\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git log --oneline --graph\
*   \cf6 a91571f (
\f1\b \cf7 HEAD -> \cf4 master
\f0\b0 \cf6 , 
\f1\b \cf5 origin/master
\f0\b0 \cf6 )\cf2  Merge branch 'NewBranch'\
\cf5 |\cf4 \\\cf2   \
\cf5 |\cf2  * \cf6 b9afff1 (
\f1\b \cf5 origin/NewBranch
\f0\b0 \cf6 , 
\f1\b \cf4 NewBranch
\f0\b0 \cf6 )\cf2  added comma123.txt\
* \cf4 |\cf2    \cf6 cc4fb2a\cf2  Merge pull request #1 from djmati/NewBranck\
\cf6 |\cf4 \\\cf2  \cf4 \\\cf2   \
\cf6 |\cf2  \cf4 |/\cf2   \
\cf6 |\cf2  * \cf6 ca3322e\cf2  comma file\
\cf6 |/\cf2   \
* \cf6 2d8a578\cf2  File removed\
* \cf6 2808dd9\cf2  New new file\
* \cf6 da5fe43\cf2  Update new-file.txt\
* \cf6 581f317\cf2  Update new-file.txt\
* \cf6 2af3802\cf2  New FIle\
* \cf6 7904c53\cf2  Initial commit\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch -d NewBranch\
Deleted branch NewBranch (was b9afff1).\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git branch\
* \cf4 master\cf2 \
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push --all --prune\
To https://github.com/djmati/exercise-repo\
 - [deleted]         NewBranch\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ git push --all --force --prune\
Everything up-to-date\
DJ-MATIs-MacBook-Pro:exercise-repo Mati$ \
}